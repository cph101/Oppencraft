name: publish
on:
  workflow_dispatch:
    inputs:
      release_as_beta:
        description: "Mark as pre-release"
        required: true
        type: boolean
        default: true
      publish_github:
        description: "Publish to GitHub"
        required: true
        type: boolean
        default: true
      publish_modrinth:
        description: "Publish to Modrinth"
        required: true
        type: boolean
        default: true
permissions:
  contents: write
  packages: write
  
jobs:
  mod-build:
    name: üì¶ Build mod
    runs-on: macos-latest # I'm too lazy to setup a system I'm not used to
    outputs:
      archives_base_name: ${{ steps.mod_properties.outputs.archives_base_name }}
      minecraft_version: ${{ steps.mod_properties.outputs.minecraft_version }}
      version: ${{ steps.mod_properties.outputs.version }}
      changelog_body: ${{ steps.gen_changelog.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 # This is effectively git pull
      - name: Setup NodeJS
        with:
          node-version: 16
        uses: actions/setup-node@v4.0.1
      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'microsoft'
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1 # Basically bug check stuff
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew # Execution workaround for unix-based systems
      - name: Setup gradle
        uses: gradle/gradle-build-action@v2.11.1 # Speeds up build time by about 5 mins :P
        with:
          gradle-version: 7.6
      - name: Validate gradle wrapper (again)
        uses: gradle/wrapper-validation-action@v1 # Basically bug check stuff
      - name: Execute Gradle build
        run: ./gradlew build # Builds the mod into a jar file
      - uses: actions/upload-artifact@v4
        with:
          name: mod-build-files
          path: build/libs/ # Uploads built file as an artifact
      - name: Read value from Properties-file
        id: mod_properties
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: './gradle.properties'
          properties: 'archives_base_name version minecraft_version' # We'll use these later
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }} # Find latest tag
          releases-only: true
        id: previousTag
      - name: Generate Changelog # Generate changelog based on previous action
        id: gen_changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ steps.previousTag.outputs.tag }}
          reverseOrder: true
          useGitmojis: false
          includeRefIssues: false
      - name: Commit CHANGELOG.md # Commit changelog lmao
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: "docs: Update changelog for v${{ steps.mod_properties.outputs.version }}-${{ steps.mod_properties.outputs.minecraft_version }}"
          file_pattern: CHANGELOG.md
          
  publish-github:
    name: üêô Publish to GitHub
    runs-on: macos-latest
    if: inputs.publish_github
    needs: mod-build
    steps:
      - name: Download build files
        uses: actions/download-artifact@v4.1.0
        with:
          path: build/
      - name: debug
        run: mv build/mod-build-files build/libs
      - name: publish
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            build/libs/!(*-@(dev|sources|javadoc)).jar
            build/libs/*-@(dev|sources|javadoc).jar
          github-tag: "v${{ env.mod_version }}-${{ env.mc_version }}"
          name: "v${{ env.mod_version }}-${{ env.mc_version }}"
          version: "v${{ env.mod_version }}-${{ env.mc_version }}"
          version-type: ${{ inputs.release_as_beta && 'beta' || 'release' }}
          changelog: ${{ needs.mod-build.outputs.changelog_body }}
        env:
          mod_name: ${{ needs.mod-build.outputs.archives_base_name }}
          mc_version: ${{ needs.mod-build.outputs.minecraft_version }}
          mod_version: ${{ needs.mod-build.outputs.version }}
          
  publish-modrinth:
      name: üü¢ Publish to Modrinth
      runs-on: macos-latest
      if: inputs.publish_modrinth
      needs: mod-build
      steps:
      - name: Download build files
        uses: actions/download-artifact@v4.1.0
        with:
          path: build/
      - name: debug
        run: mv build/mod-build-files build/libs
      - name: publish
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: cA4tDnLw
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: "build/libs/${{ env.mod_name }}-${{ env.mod_version }}+${{ env.mc_version }}.jar"
          name: "v${{ env.mod_version }}-${{ env.mc_version }}"
          loaders: "quilt"
          game-versions: "${{ env.mc_version }}"
          version: "v${{ env.mod_version }}-${{ env.mc_version }}"
          version-type: ${{ inputs.release_as_beta && 'beta' || 'release' }}
          changelog: ${{ needs.mod-build.outputs.changelog_body }}
          dependencies: |
                      twkfQtEc # Moonlightlib
        env:
          mod_name: ${{ needs.mod-build.outputs.archives_base_name }}
          mc_version: ${{ needs.mod-build.outputs.minecraft_version }}
          mod_version: ${{ needs.mod-build.outputs.version }}
